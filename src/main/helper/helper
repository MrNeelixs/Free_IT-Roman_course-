                        Класс Math
Класс Math содержит методы, связанные с геометрией и тригонометрией и
прочей математики. Методы реализованы как static, поэтому можно сразу вызывать
через Math.methodName() без создания экземпляра класса.
*****************************************************************************************
abs(x) – модуль аргумента.
ceil(x) – округление в большую строну.
cos(x) – косинус.
exp(x) – экспонента.
floor(x) – округление в меньшую сторону.
log(x) – логарифм.
max(x, y) – максимальное значение из данных аргументов.
min(x, y) – минимальное значение.
pow(x, y) – возведение в степень.
random() – случайное число от 0 до 1.
round(x) – округление к ближайшему целому.
sin(x) – синус.
sqrt(x) – квадратный корень.
tan(x) – тангенс.
valueOf(): Для преобразования обычного числа в число с произвольной точностью
           (называемое большим числом)
При работе с большими числами нельзя использовать привычные
математические операции с помощью + или * и т.п. Вместо них следует использовать
специальные методы add() (сложение), multiply() (умножение), divide() (деление) и
т.д.
*************************************************************************************
                                Класс Arrays
static int binarySearch(int[] a, int key) – производит поиск в массиве
                                            указанного значения бинарным способом. Если массив не является
                                            отсортированным, результаты поиска неопределены.
static boolean equals(int[] a, int[] a2) – сравнивает два массива.

static void fill(int[] a, int val) –       назначает указанное значение всем элементам
                                           массива. После массива могут быть указаны еще два параметра: номер первого и
                                           номер последнего элемента, которым присваиваются значения.

static void sort(int[] a) –                сортирует массив. Также можно отсортировать
                                           фрагмент массива, указав, вторым и третьим входными параметрами номера
                                           первого и последнего элемента, сортируемой части.

****************************************************************************************************
                                    Классы-обертки
Следует отметить одну особенность объектов данных классов – значения в
объектах не могут меняться. Т.е. если создан объект типа Integer со значением 5,
изменить это значение не возможно. Если следует менять значение, необходимо
создавать новый объект.

double doubleValue() – возвращает вещественное удвоенной точности.
float floatValue() – возвращает вещественное.
int intValue() – возвращает целое число.
long longValue() – возвращает длинное целое.
short shortValue() – возвращает короткое целое.

static int parseInt(String str) функция для перевода из строкового в числовой
                                тип. Функция является статической, и возвращает значение примитивного типа.

static String toBinaryString(int i)
static String toHexString(int i)       функций для перевода числа в строку с указанной системой счисления:
static String toOctalString(int i)

******************************************************************************************************
                                    Дата и время
Когда объект, содержащий дату создан, можно получить значение любого из ее параметров, используя следующий метод:

public int get(int field)  Данному методу на вход передается константа, задающая, какой параметр
                           необходимо получить. Имеются следующие константы:

static int DATE – функция вернет день месяца
static int DAY_OF_MONTH – аналогично предыдущему.
static int DAY_OF_WEEK – функция вернет день недели.
static int DAY_OF_YEAR – функция вернет номер этого дня в данном году.
static int HOUR – функция вернет час.
static int HOUR_OF_DAY – функция вернет час.
static int MILLISECOND – функция вернет миллисекунды, в данной секунде.
static int MINUTE – функция вернет секунды.
static int MONTH – функция вернет месяц.
static int SECOND – функция вернет секунды.
static int WEEK_OF_MONTH – функция вернет номер недели.
static int WEEK_OF_YEAR – функция вернет номер недели в году.
static int YEAR – функция вернет номер года.

void set(int field, int value) – первый параметр – одна из вышеописанных констант,
                                 второй – значение соответствующего элемента даты.

void setTime(Date date) – берет данные из объекта Date.
void setTimeInMillis(long millis) – получает дату в виде длинного целого (в
                                    миллисекундах от исходной).
Методы для сравнения дат:

boolean after(Object when)
boolean before(Object when)

*******************************************************************************************************
                                    Строки
String не может быть изменен – вместо этого, при попытке изменения
переменной String, создается новый объект String и просто заменяется ссылка.
1. использование строк в многопоточных средах (String является
потокобезопасным (thread-safe) )
2. использование String Pool (это коллекция ссылок на String объекты,
используется для оптимизации памяти)
3. использование строк в качестве ключей в HashMap (ключ
рекомендуется делать неизменяемым)

String str1 = str.substring(5);   Функция substring отрезает фрагмент строки, начиная с указанной позиции.

char charAt(int index)          возвращает символ, находящийся вуказанной позиции.

int compareTo(String anotherString)   сравнивает строку с другой строкой (сравнивается именно текст, содержащийся в
                                      строках)

int compareToIgnoreCase(String str)   то же самое, но без учета регистра

String concat(String str)               возвращает объект строки, содержащий
                                        сумму данной строки, и переданной как
                                        аргумент.

boolean contentEquals(StringBuffer sb)  сравнивает содержимое объекта String и
                                        StringBuffer

static String copyValueOf(char[] data) возвращает объект строки, содержащей переданные методу символы

static String copyValueOf(char[] data,int offset, int count)    возвращает объект строки, содержащий
                                                                символы из переданного массива, начиная с
                                                                символа, заданного вторым параметром, и
                                                                количество, заданное третьим параметром.

boolean endsWith(String suffix)                             проверяет, завершается ли строка заданным
                                                            суффиксом (совпадает ли конец строки с
                                                            переданной)

boolean equals(Object anObject) с                           равнивает строку с объектом

boolean equalsIgnoreCase(String anotherString)              сравнивает строки, игнорируя регистр

byte[] getBytes()                                           возвращает строку в виде массива байтов (в
                                                            качестве входного параметра указывается
                                                            название требуемой кодировки)

void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)  копирует элементы из данной строки в
                                                                   массив, заданный третьим параметром

int hashCode()                      возвращает хеш-код строки.

int indexOf(int ch)                 ищет в строке переданный символ и
                                    возвращает позицию первого совпадения.
                                    Может иметь два параметра, тогда вторым
                                    указывается номер, с которого надо начинать
                                    поиск. Вместо символа может быть также
                                    строка.

int lastIndexOf(int ch)             аналогично предыдущему, но поиск выполняется с конца.

int length()                        возвращает длину строки.

boolean regionMatches(boolean ignoreCase, int toffset, String other,int ooffset, int len)

                                                    проверяет, совпадают ли заданные
                                                    фрагменты строк. Первый параметр может
                                                     отсутствовать

String replace(char oldChar, char newChar)          возвращает строку, где все символы,
                                                    совпадающие с первым, заменены вторым

boolean startsWith(String prefix)                   проверяет, начинается ли строка с данного
                                                    префикса (совпадает ли начало строки с
                                                    переданной)

String substring(int beginIndex)                    возвращает строку, содержащую фрагмент
                                                    данной строки. Может иметь два параметра:
                                                    номер первого символа и номер последнего
                                                    символа (второй может отсутствовать)

char[] toCharArray()                                возвращает массив символов, содержащий данную строку.

String toLowerCase()                                возвращает строку, содержащую копию
                                                    данной, приведенную к нижнему регистру
String toUpperCase()                                аналогично, но к верхнему регистру

String trim()                                       возвращает строку с удаленными начальными
                                                    и конечными пробелами

static String valueOf(boolean b)                    возвращает строковое представление
                                                    булевского аргумента (аргумент может быть
                                                    любого примитивного типа)

Метод trim() —                                      возвращает копию строки с пропущенными начальными и конечными пробелами

Метод split                                         в Java разделяет строку на подстроки, используя разделитель, который определяется с помощью регулярного выражения.

Метод replaceAll() —                                заменяет каждую подстроку данной строки, которая соответствует заданному регулярному выражению, с данной заменой,
                                                    другими словами — метод позволяет заменить слово в строке.

********************************************************************************************************

